{
  "address": "0x26ACA1C09716592644437391fC006cDD4Cf8700d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1eddf47c5659b59e188c1c972f7bb448a2879a3c4773d9e3482de162ef992259",
  "receipt": {
    "to": null,
    "from": "0x0A57f3059FbF9455EaC4D85Ed091D3f9F02eA727",
    "contractAddress": "0x26ACA1C09716592644437391fC006cDD4Cf8700d",
    "transactionIndex": 10,
    "gasUsed": "854847",
    "logsBloom": "0x
    "blockHash": "0x8e5e98bc213803576a64aa5c3a14380cf373f18ea3ca374be97615b73369d139",
    "transactionHash": "0x1eddf47c5659b59e188c1c972f7bb448a2879a3c4773d9e3482de162ef992259",
    "logs": [],
    "blockNumber": 10999787,
    "cumulativeGasUsed": "6318813",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "4bad43df3730e81dc557ab861a72d6bb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\nimport './PriceConverter.sol';\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MIN_USD = 10 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MIN_USD,\\n            'Didnt send ehough'\\n        ); // == 1 * 10 ** 18 == 1 eth\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public olnyOwner {\\n        for (uint256 funderIdx = 0; funderIdx < funders.length; funderIdx++) {\\n            address funder = funders[funderIdx];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }('');\\n        require(callSuccess, 'Call failed((((');\\n    }\\n\\n    modifier olnyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x6f136fc3d7008859fa03fcccd8fefe6f625531f4ca34bfdc71c0650b596f4641\",\"license\":\"UNLICENSED\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\nimport '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';\\n\\nlibrary PriceConverter {\\n    // ABI\\n    // address 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e Rinkby network(from https://docs.chain.link/docs/ethereum-addresses/)\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n\\n        return uint256(answer * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xb29e419f13cf1484262e772399dc1eb7e5da8052f854e49f011ae1f9112e6304\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f75380380610f7583398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610e1661015f600039600081816102df015261055d0152610e166000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063213dbea21461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b6040516100af919061075a565b60405180910390f35b3480156100c457600080fd5b506100cd6102dd565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107d8565b61051d565b604051610103919061075a565b60405180910390f35b34801561011857600080fd5b50610121610535565b60405161012e9190610864565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055b565b604051610163919061088e565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d5565b61057f565b6040516101a0919061088e565b60405180910390f35b678ac7230489e800006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105be90919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f9061095f565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b678ac7230489e8000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610362576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040d5760008082815481106103875761038661097f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610405906109dd565b915050610365565b50600067ffffffffffffffff81111561042957610428610a26565b5b6040519080825280602002602001820160405280156104575781602001602082028036833780820191505090505b506000908051906020019061046d92919061069a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049490610a86565b60006040518083038185875af1925050503d80600081146104d1576040519150601f19603f3d011682016040523d82523d6000602084013e6104d6565b606091505b505090508061051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190610ae7565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105ca836105fa565b90506000670de0b6b3a764000085836105e39190610b07565b6105ed9190610b90565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064357600080fd5b505afa158015610657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067b9190610c4e565b5050509150506402540be400816106929190610cc9565b915050919050565b828054828255906000526020600020908101928215610713579160200282015b828111156107125782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ba565b5b5090506107209190610724565b5090565b5b8082111561073d576000816000905550600101610725565b5090565b6000819050919050565b61075481610741565b82525050565b600060208201905061076f600083018461074b565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a58261077a565b9050919050565b6107b58161079a565b81146107c057600080fd5b50565b6000813590506107d2816107ac565b92915050565b6000602082840312156107ee576107ed610775565b5b60006107fc848285016107c3565b91505092915050565b6000819050919050565b600061082a6108256108208461077a565b610805565b61077a565b9050919050565b600061083c8261080f565b9050919050565b600061084e82610831565b9050919050565b61085e81610843565b82525050565b60006020820190506108796000830184610855565b92915050565b6108888161079a565b82525050565b60006020820190506108a3600083018461087f565b92915050565b6108b281610741565b81146108bd57600080fd5b50565b6000813590506108cf816108a9565b92915050565b6000602082840312156108eb576108ea610775565b5b60006108f9848285016108c0565b91505092915050565b600082825260208201905092915050565b7f4469646e742073656e642065686f756768000000000000000000000000000000600082015250565b6000610949601183610902565b915061095482610913565b602082019050919050565b600060208201905081810360008301526109788161093c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e882610741565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1b57610a1a6109ae565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a70600083610a55565b9150610a7b82610a60565b600082019050919050565b6000610a9182610a63565b9150819050919050565b7f43616c6c206661696c6564282828280000000000000000000000000000000000600082015250565b6000610ad1600f83610902565b9150610adc82610a9b565b602082019050919050565b60006020820190508181036000830152610b0081610ac4565b9050919050565b6000610b1282610741565b9150610b1d83610741565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5657610b556109ae565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b9b82610741565b9150610ba683610741565b925082610bb657610bb5610b61565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610be081610bc1565b8114610beb57600080fd5b50565b600081519050610bfd81610bd7565b92915050565b6000819050919050565b610c1681610c03565b8114610c2157600080fd5b50565b600081519050610c3381610c0d565b92915050565b600081519050610c48816108a9565b92915050565b600080600080600060a08688031215610c6a57610c69610775565b5b6000610c7888828901610bee565b9550506020610c8988828901610c24565b9450506040610c9a88828901610c39565b9350506060610cab88828901610c39565b9250506080610cbc88828901610bee565b9150509295509295909350565b6000610cd482610c03565b9150610cdf83610c03565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1e57610d1d6109ae565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5b57610d5a6109ae565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9857610d976109ae565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dd557610dd46109ae565b5b82820290509291505056fea264697066735822122034adea9706cd06ae93b2331967cdf1a5a1bca7eb55837d85766e7dd5bce6d81464736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063213dbea21461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b6040516100af919061075a565b60405180910390f35b3480156100c457600080fd5b506100cd6102dd565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107d8565b61051d565b604051610103919061075a565b60405180910390f35b34801561011857600080fd5b50610121610535565b60405161012e9190610864565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055b565b604051610163919061088e565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d5565b61057f565b6040516101a0919061088e565b60405180910390f35b678ac7230489e800006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105be90919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f9061095f565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b678ac7230489e8000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610362576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040d5760008082815481106103875761038661097f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610405906109dd565b915050610365565b50600067ffffffffffffffff81111561042957610428610a26565b5b6040519080825280602002602001820160405280156104575781602001602082028036833780820191505090505b506000908051906020019061046d92919061069a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049490610a86565b60006040518083038185875af1925050503d80600081146104d1576040519150601f19603f3d011682016040523d82523d6000602084013e6104d6565b606091505b505090508061051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190610ae7565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105ca836105fa565b90506000670de0b6b3a764000085836105e39190610b07565b6105ed9190610b90565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064357600080fd5b505afa158015610657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067b9190610c4e565b5050509150506402540be400816106929190610cc9565b915050919050565b828054828255906000526020600020908101928215610713579160200282015b828111156107125782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ba565b5b5090506107209190610724565b5090565b5b8082111561073d576000816000905550600101610725565b5090565b6000819050919050565b61075481610741565b82525050565b600060208201905061076f600083018461074b565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a58261077a565b9050919050565b6107b58161079a565b81146107c057600080fd5b50565b6000813590506107d2816107ac565b92915050565b6000602082840312156107ee576107ed610775565b5b60006107fc848285016107c3565b91505092915050565b6000819050919050565b600061082a6108256108208461077a565b610805565b61077a565b9050919050565b600061083c8261080f565b9050919050565b600061084e82610831565b9050919050565b61085e81610843565b82525050565b60006020820190506108796000830184610855565b92915050565b6108888161079a565b82525050565b60006020820190506108a3600083018461087f565b92915050565b6108b281610741565b81146108bd57600080fd5b50565b6000813590506108cf816108a9565b92915050565b6000602082840312156108eb576108ea610775565b5b60006108f9848285016108c0565b91505092915050565b600082825260208201905092915050565b7f4469646e742073656e642065686f756768000000000000000000000000000000600082015250565b6000610949601183610902565b915061095482610913565b602082019050919050565b600060208201905081810360008301526109788161093c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e882610741565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1b57610a1a6109ae565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a70600083610a55565b9150610a7b82610a60565b600082019050919050565b6000610a9182610a63565b9150819050919050565b7f43616c6c206661696c6564282828280000000000000000000000000000000000600082015250565b6000610ad1600f83610902565b9150610adc82610a9b565b602082019050919050565b60006020820190508181036000830152610b0081610ac4565b9050919050565b6000610b1282610741565b9150610b1d83610741565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5657610b556109ae565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b9b82610741565b9150610ba683610741565b925082610bb657610bb5610b61565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610be081610bc1565b8114610beb57600080fd5b50565b600081519050610bfd81610bd7565b92915050565b6000819050919050565b610c1681610c03565b8114610c2157600080fd5b50565b600081519050610c3381610c0d565b92915050565b600081519050610c48816108a9565b92915050565b600080600080600060a08688031215610c6a57610c69610775565b5b6000610c7888828901610bee565b9550506020610c8988828901610c24565b9450506040610c9a88828901610c39565b9350506060610cab88828901610c39565b9250506080610cbc88828901610bee565b9150509295509295909350565b6000610cd482610c03565b9150610cdf83610c03565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1e57610d1d6109ae565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5b57610d5a6109ae565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9857610d976109ae565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dd557610dd46109ae565b5b82820290509291505056fea264697066735822122034adea9706cd06ae93b2331967cdf1a5a1bca7eb55837d85766e7dd5bce6d81464736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}