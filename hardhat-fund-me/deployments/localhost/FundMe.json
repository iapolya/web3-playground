{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAmountByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "idx",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3a10d3d571783584def0348a3c1d04ab3bbd08b25a26052768b9b97222078986",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "890508",
    "logsBloom": "0x
    "blockHash": "0xee307c4055a567f54a0ab9178c1a7cf71fafa8e6fe39673691db87c69a673607",
    "transactionHash": "0x3a10d3d571783584def0348a3c1d04ab3bbd08b25a26052768b9b97222078986",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "890508",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "cc3924a53ae2e24f1e860ecc096f1f79",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAmountByAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n// 1. Pragms\\npragma solidity ^0.8.9;\\n\\n// 2. Imports\\nimport './PriceConverter.sol';\\n\\n// 3. Error codes\\nerror FundMe__NotOwner();\\n\\n// Interfaces, Libraries, Contracts\\n\\ncontract FundMe {\\n    // 1. type declarations\\n    using PriceConverter for uint256;\\n\\n    // 2. State variables\\n    uint256 public constant MIN_USD = 10 * 1e18;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // 3. Events\\n\\n    // 4. Modifiers\\n    modifier olnyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MIN_USD,\\n            'Didnt send ehough'\\n        ); // == 1 * 10 ** 18 == 1 eth\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public olnyOwner {\\n        // \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u043c memory, \\u0447\\u0442\\u043e\\u0431\\u044b \\u0443\\u043c\\u0435\\u043d\\u044c\\u0448\\u0438\\u0442\\u044c gas price, \\u0440\\u0430\\u0441\\u0445\\u043e\\u0434\\u0443\\u044e\\u0449\\u0438\\u0439\\u0441\\u044f \\u043f\\u0440\\u0438 \\u043e\\u0431\\u0440\\u0430\\u0449\\u0435\\u043d\\u0438\\u0438 \\u043a storage\\n        address[] memory funders = s_funders;\\n\\n        for (uint256 funderIdx = 0; funderIdx < funders.length; funderIdx++) {\\n            address funder = funders[funderIdx];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }('');\\n        require(callSuccess, 'Call failed((((');\\n    }\\n\\n    function getFunder(uint256 idx) public view returns (address) {\\n        return s_funders[idx];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getAmountByAddress(address funder) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xb7e771576621cf250042e3327f6fbd790926a3a4ba177497c011fe85d975c047\",\"license\":\"UNLICENSED\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\nimport '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';\\n\\nlibrary PriceConverter {\\n    // ABI\\n    // address 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e Rinkby network(from https://docs.chain.link/docs/ethereum-addresses/)\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n\\n        return uint256(answer * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xb29e419f13cf1484262e772399dc1eb7e5da8052f854e49f011ae1f9112e6304\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516200101d3803806200101d83398181016040528101906100349190610112565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100df826100b4565b9050919050565b6100ef816100d4565b81146100fa57600080fd5b50565b60008151905061010c816100e6565b92915050565b600060208284031215610128576101276100af565b5b6000610136848285016100fd565b91505092915050565b608051610ebb62000162600039600081816102df01526105850152610ebb6000f3fe6080604052600436106100745760003560e01c80639e87a5cd1161004e5780639e87a5cd146100fa578063b60d428814610125578063c8249f921461012f578063d7b4750c1461016c57610083565b8063213dbea21461008d5780633ccfd60b146100b8578063893d20e8146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b6040516100af91906107ff565b60405180910390f35b3480156100c457600080fd5b506100cd6102dd565b005b3480156100db57600080fd5b506100e4610581565b6040516100f1919061085b565b60405180910390f35b34801561010657600080fd5b5061010f6105a9565b60405161011c91906108d5565b60405180910390f35b61012d6101a9565b005b34801561013b57600080fd5b5061015660048036038101906101519190610921565b6105d3565b60405161016391906107ff565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e919061097a565b61061c565b6040516101a0919061085b565b60405180910390f35b678ac7230489e800006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461066390919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610a04565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b678ac7230489e8000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610362576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156103e557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161039b575b5050505050905060005b815181101561047057600082828151811061040d5761040c610a24565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046890610a82565b9150506103ef565b50600067ffffffffffffffff81111561048c5761048b610acb565b5b6040519080825280602002602001820160405280156104ba5781602001602082028036833780820191505090505b50600090805190602001906104d092919061073f565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f790610b2b565b60006040518083038185875af1925050503d8060008114610534576040519150601f19603f3d011682016040523d82523d6000602084013e610539565b606091505b505090508061057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057490610b8c565b60405180910390fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061063157610630610a24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061066f8361069f565b90506000670de0b6b3a764000085836106889190610bac565b6106929190610c35565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106e857600080fd5b505afa1580156106fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107209190610cf3565b5050509150506402540be400816107379190610d6e565b915050919050565b8280548282559060005260206000209081019282156107b8579160200282015b828111156107b75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061075f565b5b5090506107c591906107c9565b5090565b5b808211156107e25760008160009055506001016107ca565b5090565b6000819050919050565b6107f9816107e6565b82525050565b600060208201905061081460008301846107f0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108458261081a565b9050919050565b6108558161083a565b82525050565b6000602082019050610870600083018461084c565b92915050565b6000819050919050565b600061089b6108966108918461081a565b610876565b61081a565b9050919050565b60006108ad82610880565b9050919050565b60006108bf826108a2565b9050919050565b6108cf816108b4565b82525050565b60006020820190506108ea60008301846108c6565b92915050565b600080fd5b6108fe8161083a565b811461090957600080fd5b50565b60008135905061091b816108f5565b92915050565b600060208284031215610937576109366108f0565b5b60006109458482850161090c565b91505092915050565b610957816107e6565b811461096257600080fd5b50565b6000813590506109748161094e565b92915050565b6000602082840312156109905761098f6108f0565b5b600061099e84828501610965565b91505092915050565b600082825260208201905092915050565b7f4469646e742073656e642065686f756768000000000000000000000000000000600082015250565b60006109ee6011836109a7565b91506109f9826109b8565b602082019050919050565b60006020820190508181036000830152610a1d816109e1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a8d826107e6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ac057610abf610a53565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b15600083610afa565b9150610b2082610b05565b600082019050919050565b6000610b3682610b08565b9150819050919050565b7f43616c6c206661696c6564282828280000000000000000000000000000000000600082015250565b6000610b76600f836109a7565b9150610b8182610b40565b602082019050919050565b60006020820190508181036000830152610ba581610b69565b9050919050565b6000610bb7826107e6565b9150610bc2836107e6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bfb57610bfa610a53565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c40826107e6565b9150610c4b836107e6565b925082610c5b57610c5a610c06565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c8581610c66565b8114610c9057600080fd5b50565b600081519050610ca281610c7c565b92915050565b6000819050919050565b610cbb81610ca8565b8114610cc657600080fd5b50565b600081519050610cd881610cb2565b92915050565b600081519050610ced8161094e565b92915050565b600080600080600060a08688031215610d0f57610d0e6108f0565b5b6000610d1d88828901610c93565b9550506020610d2e88828901610cc9565b9450506040610d3f88828901610cde565b9350506060610d5088828901610cde565b9250506080610d6188828901610c93565b9150509295509295909350565b6000610d7982610ca8565b9150610d8483610ca8565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dc357610dc2610a53565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e0057610dff610a53565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e3d57610e3c610a53565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e7a57610e79610a53565b5b82820290509291505056fea26469706673582212208031a506b0c0d63d5e2bb87ba32a96cfa27f7dfb619b820777e887688204f9bb64736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80639e87a5cd1161004e5780639e87a5cd146100fa578063b60d428814610125578063c8249f921461012f578063d7b4750c1461016c57610083565b8063213dbea21461008d5780633ccfd60b146100b8578063893d20e8146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b6040516100af91906107ff565b60405180910390f35b3480156100c457600080fd5b506100cd6102dd565b005b3480156100db57600080fd5b506100e4610581565b6040516100f1919061085b565b60405180910390f35b34801561010657600080fd5b5061010f6105a9565b60405161011c91906108d5565b60405180910390f35b61012d6101a9565b005b34801561013b57600080fd5b5061015660048036038101906101519190610921565b6105d3565b60405161016391906107ff565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e919061097a565b61061c565b6040516101a0919061085b565b60405180910390f35b678ac7230489e800006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461066390919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610a04565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b678ac7230489e8000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610362576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156103e557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161039b575b5050505050905060005b815181101561047057600082828151811061040d5761040c610a24565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046890610a82565b9150506103ef565b50600067ffffffffffffffff81111561048c5761048b610acb565b5b6040519080825280602002602001820160405280156104ba5781602001602082028036833780820191505090505b50600090805190602001906104d092919061073f565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f790610b2b565b60006040518083038185875af1925050503d8060008114610534576040519150601f19603f3d011682016040523d82523d6000602084013e610539565b606091505b505090508061057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057490610b8c565b60405180910390fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061063157610630610a24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061066f8361069f565b90506000670de0b6b3a764000085836106889190610bac565b6106929190610c35565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106e857600080fd5b505afa1580156106fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107209190610cf3565b5050509150506402540be400816107379190610d6e565b915050919050565b8280548282559060005260206000209081019282156107b8579160200282015b828111156107b75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061075f565b5b5090506107c591906107c9565b5090565b5b808211156107e25760008160009055506001016107ca565b5090565b6000819050919050565b6107f9816107e6565b82525050565b600060208201905061081460008301846107f0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108458261081a565b9050919050565b6108558161083a565b82525050565b6000602082019050610870600083018461084c565b92915050565b6000819050919050565b600061089b6108966108918461081a565b610876565b61081a565b9050919050565b60006108ad82610880565b9050919050565b60006108bf826108a2565b9050919050565b6108cf816108b4565b82525050565b60006020820190506108ea60008301846108c6565b92915050565b600080fd5b6108fe8161083a565b811461090957600080fd5b50565b60008135905061091b816108f5565b92915050565b600060208284031215610937576109366108f0565b5b60006109458482850161090c565b91505092915050565b610957816107e6565b811461096257600080fd5b50565b6000813590506109748161094e565b92915050565b6000602082840312156109905761098f6108f0565b5b600061099e84828501610965565b91505092915050565b600082825260208201905092915050565b7f4469646e742073656e642065686f756768000000000000000000000000000000600082015250565b60006109ee6011836109a7565b91506109f9826109b8565b602082019050919050565b60006020820190508181036000830152610a1d816109e1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a8d826107e6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ac057610abf610a53565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b15600083610afa565b9150610b2082610b05565b600082019050919050565b6000610b3682610b08565b9150819050919050565b7f43616c6c206661696c6564282828280000000000000000000000000000000000600082015250565b6000610b76600f836109a7565b9150610b8182610b40565b602082019050919050565b60006020820190508181036000830152610ba581610b69565b9050919050565b6000610bb7826107e6565b9150610bc2836107e6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bfb57610bfa610a53565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c40826107e6565b9150610c4b836107e6565b925082610c5b57610c5a610c06565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c8581610c66565b8114610c9057600080fd5b50565b600081519050610ca281610c7c565b92915050565b6000819050919050565b610cbb81610ca8565b8114610cc657600080fd5b50565b600081519050610cd881610cb2565b92915050565b600081519050610ced8161094e565b92915050565b600080600080600060a08688031215610d0f57610d0e6108f0565b5b6000610d1d88828901610c93565b9550506020610d2e88828901610cc9565b9450506040610d3f88828901610cde565b9350506060610d5088828901610cde565b9250506080610d6188828901610c93565b9150509295509295909350565b6000610d7982610ca8565b9150610d8483610ca8565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dc357610dc2610a53565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e0057610dff610a53565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e3d57610e3c610a53565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e7a57610e79610a53565b5b82820290509291505056fea26469706673582212208031a506b0c0d63d5e2bb87ba32a96cfa27f7dfb619b820777e887688204f9bb64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}